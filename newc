<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Page Maker - Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        .component-wrapper {
            display: flex;
            align-items: flex-start;
            gap: 20px;
            overflow-x: auto;
            border: 1px dashed #ccc; /* Added border for visibility */
            padding: 10px;
        }
        .component {
            width: 300px;
            min-width: 300px;
            cursor: move; /* Change cursor to indicate draggable */
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 10px;
        }
        .draggable {
            opacity: 0.5; /* Make it slightly transparent when dragging */
        }
        .dropzone {
            border: 2px dashed #007bff;
            padding: 10px;
            margin-top: 10px;
        }
    </style>
</head>
<body>

<div class="container mt-5">
    <h1 class="text-center mb-4">Create New Page</h1>
    <form method="POST" action="save_page.php" enctype="multipart/form-data">
        <div class="mb-3">
            <input type="text" name="title" class="form-control" placeholder="Page Title" required>
        </div>

        <div id="components" class="component-wrapper mb-3"></div>

        <div id="available-components" class="mb-3">
            <h5>Available Components</h5>
            <div class="component card p-3 mb-3 border" draggable="true" data-type="accordion">
                <h5>Accordion</h5>
            </div>
            <div class="component card p-3 mb-3 border" draggable="true" data-type="card">
                <h5>Card</h5>
            </div>
            <div class="component card p-3 mb-3 border" draggable="true" data-type="form">
                <h5>Form</h5>
            </div>
        </div>

        <button type="submit" class="btn btn-success mt-3">Create Page</button>
    </form>
</div>

<script>
    let componentIndex = 0;

    // Handle drag start
    $(document).on('dragstart', '.component', function (e) {
        $(this).addClass('draggable');
        e.originalEvent.dataTransfer.setData('text/plain', $(this).data('type'));
    });

    // Handle drag end
    $(document).on('dragend', '.component', function () {
        $(this).removeClass('draggable');
    });

    // Allow dropping on the components wrapper
    $('#components').on('dragover', function (e) {
        e.preventDefault(); // Prevent default to allow drop
    });

    // Handle drop event
    $('#components').on('drop', function (e) {
        e.preventDefault();
        const type = e.originalEvent.dataTransfer.getData('text/plain');
        $(this).append(getComponentHtml(componentIndex++, type));
    });

    // Generate the component HTML template dynamically
    function getComponentHtml(index, type) {
        return `
            <div class="component card p-3 mb-3 border" data-index="${index}" draggable="true">
                <h5>${type.charAt(0).toUpperCase() + type.slice(1)} #${index + 1}</h5>
                <div class="form-group mb-2">
                    <input type="text" name="components[${index}][heading]" class="form-control" placeholder="Heading">
                </div>

                <textarea name="components[${index}][content]" class="form-control mb-2" placeholder="Content (Optional)"></textarea>

                <div class="nested-components dropzone"></div> <!-- Added dropzone class -->

                <button type="button" class="btn btn-danger remove-component">Remove</button>

                <div class="dynamic-fields mt-3"></div>
            </div>
        `;
    }

    // Remove a component or nested component
    $(document).on('click', '.remove-component', function () {
        $(this).closest('.component').remove();
    });

    // Add form fields when 'Form' is selected
    $(document).on('change', '.component-type', function () {
        const component = $(this).closest('.component');
        const type = $(this).val();

        if (type === 'form') {
            component.find('.dynamic-fields').html(getFormFieldsHtml());
        } else {
            component.find('.dynamic-fields').empty();
        }
    });

    // Generate dynamic form fields HTML template without type selection
    function getFormFieldsHtml() {
        return `
            <div class="form-group mb-2 field-group">
                <input type="text" name="form_fields[][name]" class="form-control mb-2" placeholder="Field Name">
                <span class="form-field-type">Type: Text</span> <!-- Displaying field type directly -->
                <button type="button" class="btn btn-danger mt-2 remove-field">Remove Field</button>
            </div>
            <button type="button" class="btn btn-info mt-2 add-field">Add More Fields</button>
        `;
    }

    // Add more fields within the form
    $(document).on('click', '.add-field', function () {
        $(this).before(`
            <div class="form-group mb-2 field-group">
                <input type="text" name="form_fields[][name]" class="form-control mb-2" placeholder="Field Name">
                <span class="form-field-type">Type: Text</span> <!-- Displaying field type directly -->
                <button type="button" class="btn btn-danger mt-2 remove-field">Remove Field</button>
            </div>
        `);
    });

    // Remove a form field
    $(document).on('click', '.remove-field', function () {
        $(this).closest('.field-group').remove();
    });
</script>

</body>
</html>
